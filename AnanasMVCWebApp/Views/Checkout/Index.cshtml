@using AnanasMVCWebApp.Models.ViewModels
@model CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
}

@section Scripts {
    <script>
        var cities = $("select[name='Province']");
        var districts = $("select[name='District']");
        var wards = $("select[name='Ward']");
        var apiToken = "760d5095-f700-11ee-893f-b6ed573185af";

        var shippingRadios = $("input:radio[name='ShippingMethod']");
        var paymentRadios = $("input:radio[name='PaymentMethod']");
        var shippingLabel = $("label.shipping-method");
        var shippingLabelPrice = $("label.shipping-method .label-price");

        var couponInput = $("#CouponInput");
        var grandTotalInput = $("input[name='GrandTotal']");
        var discountInput = $("input[name='DiscountAmount']");
        var orderTotalInput = $("input[name='OrderTotal']");
        var shippingFeeInput = $("input[name='ShippingFee']");

        var orderTotalDisplay = $("#order-total-display");
        var discountDisplay = $("#discount-display");
        var shippingFeeDisplay = $("#shipping-fee-display");

        shippingRadios.click(function () {
            if (cities.val() == null || cities.val() == null || wards.val() == null) {
                alert("Úi bạn hãy điền đầy đủ thông tin địa chỉ trước khi chọn phương thức giao hàng nhé ^^");
                return false;
            } else {
                shippingRadios.change(function(){
                    shippingRadios.each(function (index, element) {
                        $(element).parent().removeClass("checked");
                    })
                    $(this).parent().addClass("checked");

                    var selectedFee = $(this).attr("data-shipping-fee");
                    shippingFeeInput.val(selectedFee);
                    shippingFeeDisplay.html(formatCurrency(`${selectedFee}`));

                    updateOrderTotal();
                })
                paymentRadios.change(function () {
                    paymentRadios.each(function (index, element) {
                        $(element).parent().removeClass("checked");
                    })
                    $(this).parent().addClass("checked");
                });
            }
        });

        function formatCurrency(number) {
            var n = number.split('').reverse().join("");
            var n2 = n.replace(/\d\d\d(?!$)/g, "$&,");
            return n2.split('').reverse().join('') + ' VNĐ';
        }

        function updateOrderTotal(){
            var orderTotalFinal = parseInt(grandTotalInput.val()) - parseInt(discountInput.val()) + parseInt(shippingFeeInput.val());
            orderTotalInput.val(orderTotalFinal);
            orderTotalDisplay.html(formatCurrency(`${orderTotalFinal}`));
        }
        
        $.ajax({
            url: "https://online-gateway.ghn.vn/shiip/public-api/master-data/province",
            headers: { "Token": apiToken },
            dataType: "json",
            success: (response) => {
                response.data.forEach(
                    city => { cities.append(new Option(city.ProvinceName, city.ProvinceID)) }
                );
            },
            error: () => {
                alert("Failed to load province data!");
            }
        })
        cities.change(function () {
            districts.empty().append('<option value="" selected disabled>Quận/Huyện</option>');
            wards.empty().append('<option value="" selected disabled>Phường/Xã</option>');

            shippingRadios.prop('checked', false); // Reset radio button
            shippingFeeInput.val(0); // Set display value to 0
            shippingFeeDisplay.html(formatCurrency("0")) // Set hidden input value to 0
            shippingLabel.removeClass("checked"); // Uncheck radio label
            shippingLabelPrice.html("0 VND"); // Set label value to 0

            updateOrderTotal();

            if (this.value != "") {
                $("input[name='ProvinceName']").val($("select[name='Province'] option:selected").text())
                $.ajax({
                    url: "https://online-gateway.ghn.vn/shiip/public-api/master-data/district",
                    headers: { "Token": apiToken },
                    data: { province_id: this.value },
                    dataType: "json",
                    success: (response) => {
                        response.data.forEach(
                            district => { districts.append(new Option(district.DistrictName, district.DistrictID)) }
                        );
                    },
                    error: () => {
                        alert("Không thể load dữ liệu Quận/Huyện!");
                    }
                });
            }
        })
        districts.change(function () {
            wards.empty().append('<option value="" selected disabled>Phường/Xã</option>');
            if (this.value != "") {
                $("input[name='DistrictName']").val($("select[name='District'] option:selected").text())
                $.ajax({
                    url: "https://online-gateway.ghn.vn/shiip/public-api/master-data/ward",
                    headers: { "Token": apiToken },
                    data: { district_id: this.value },
                    dataType: "json",
                    success: (response) => {
                        response.data.forEach(
                            ward => { wards.append(new Option(ward.WardName, ward.WardCode)) }
                        );
                    },
                    error: () => {
                        alert("Không thể load dữ liệu Phường/Xã!");
                    }
                });
            }
        })
        wards.change(function () {
            if (this.value != "") {
                $("input[name='WardName']").val($("select[name='Ward'] option:selected").text());
                // Call GHN API to calculate shipping fee
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetGHNFee", "Checkout")',
                    dataType: "json",
                    data: { distrcitId: parseInt(districts.val()), wardCode: wards.val() },
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        $("input[type='radio']#ghn").attr("data-shipping-fee", result);
                        $("#ghn-label").html(formatCurrency(`${result}`));
                        console.log(result);
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi vui lòng thử lại!");
                    }
                });
                // Call GHTK API to calculate shipping fee
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetGHTKFee", "Checkout")',
                    dataType: "json",
                    data: { address: $("input[name='Adress']").val(), 
                        province: $("select[name='Province'] option:selected").text(),
                        district: $("select[name='District'] option:selected").text()
                    },
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        $("input[type='radio']#ghtk").attr("data-shipping-fee", result);
                        $("#ghtk-label").html(formatCurrency(`${result}`));
                        console.log(result);
                    },
                    error: function () {
                        alert("Đã xảy ra lỗi vui lòng thử lại!");
                    }
                });
            }
        });
        // Handle coupon input
        $("#CouponSubmit").click(function () {
            if (couponInput.val() == "") {
                alert("Bạn chưa nhập mã giảm giá!");
            } else {
                var canApply = true;
                $("#couponList").children('.coupon-item').each(function () {
                    if ($(this).find("input[type='checkbox']").val() == couponInput.val()) {
                        alert("Bạn đã sử dụng mã khuyễn mãi này rồi nên không được dùng nữa nè!");
                        canApply = false;
                    }
                });
                if (canApply) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetCoupon", "Checkout")',
                        //dataType: "json",
                        data: { code: couponInput.val(), count: $("#couponList").children().length },
                        contentType: "application/json; charset=utf-8",
                        success: function (result) {
                            if (result == "") {
                                alert("Mã khuyến mãi này không hợp lệ mất rồi. Bạn hãy thử nhập lại nhé!")
                                return false;
                            } else {
                                alert("Bạn đã áp dụng mã khuyến mãi thành công!")
                                $("#couponList").append(result);
                                $.ajax({
                                    type: "GET",
                                    url: '@Url.Action("GetDiscount", "Checkout")',
                                    dataType: "json",
                                    data: {
                                        tempPrice: parseInt(grandTotalInput.val()) - parseInt(discountInput.val()),
                                        code: couponInput.val()
                                    },
                                    contentType: "application/json; charset=utf-8",
                                    success: function (result) {
                                        var discountFinal = parseInt(discountInput.val()) + result.discountAmount
                                        discountDisplay.html(formatCurrency(`${discountFinal}`));
                                        discountInput.val(discountFinal);

                                        updateOrderTotal();

                                        couponInput.val("");
                                    },
                                    error: function () {
                                        alert("Đã xảy ra lỗi vui lòng thử lại!");
                                    }
                                });
                            }
                        },
                        error: function () {
                            alert("Đã xảy ra lỗi vui lòng thử lại!");
                        }
                    });
                    
                }
            }
        });

        
    </script>
}

@using (Html.BeginForm("Index", "Checkout", FormMethod.Post)) {
    <div class="checkout-wrapper wide">
        <div class="checkout-info-wrapper">
            <div class="checkout-info__item-container">
                <div class="checkout-info-header">
                    <i class="fa-solid fa-address-book"></i>
                    <h6>Thông tin giao hàng</h6>
                </div>
                <div class="checkout-info-body">
                    <div class="form-row">
                        <div class="input-group">
                            @Html.LabelFor(i => i.FullName)
                            @Html.TextBoxFor(i => i.FullName, new { placeholder = "Họ tên" })
                            @Html.ValidationMessageFor(i => i.FullName, "", new { @class = "input-error" })
                        </div>
                    </div>
                    <div class="form-row multiple">
                        <div class="input-group">
                            @Html.LabelFor(i => i.Phone)
                            @Html.TextBoxFor(i => i.Phone, new { placeholder = "Số điện thoại" })
                            @Html.ValidationMessageFor(i => i.Phone, "", new { @class = "input-error" })
                        </div>
                        <div class="input-group">
                            @Html.LabelFor(i => i.Email)
                            @Html.TextBoxFor(i => i.Email, new { placeholder = "Email" })
                            @Html.ValidationMessageFor(i => i.Email, "", new { @class = "input-error" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="input-group">
                            @Html.LabelFor(i => i.Adress)
                            @Html.TextBoxFor(i => i.Adress, new { placeholder = "Địa chỉ" })
                            @Html.ValidationMessageFor(i => i.Adress, "", new { @class = "input-error" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="input-group">
                            @Html.LabelFor(i => i.Province)
                            <select asp-for="@Model.Province">
                                <option value="" selected disabled>Tỉnh/Thành phố</option>
                            </select>
                            @Html.ValidationMessageFor(i => i.Province, "", new { @class = "input-error" })
                            @Html.HiddenFor(i => i.ProvinceName)
                        </div>
                    </div>
                    <div class="form-row multiple">
                        <div class="input-group">
                            @Html.LabelFor(i => i.District)
                            <select asp-for="@Model.District">
                                <option value="" selected disabled>Quận/Huyện</option>
                            </select>
                            @Html.ValidationMessageFor(i => i.District, "", new { @class = "input-error" })
                            @Html.HiddenFor(i => i.DistrictName)
                        </div>
                        <div class="input-group">
                            @Html.LabelFor(i => i.Ward)
                            <select asp-for="@Model.Ward">
                                <option value="" selected disabled>Phường/Xã</option>
                            </select>
                            @Html.ValidationMessageFor(i => i.Ward, "", new { @class = "input-error" })
                            @Html.HiddenFor(i => i.WardName)
                        </div>
                    </div>
                </div>
            </div>
            <div class="checkout-info__item-container">
                <div class="checkout-info-header">
                    <i class="fa-solid fa-truck"></i>
                    <h6>Phương thức giao hàng</h6>
                </div>
                <div class="checkout-info-body">
                    @foreach (var item in Model.ShippingMethods) {
                        <label for="@item.Slug" class="shipping-method radio-container @(item.Id == Model.ShippingMethod ? "checked" : "")">
                            <input type="radio" asp-for="@Model.ShippingMethod" id="@item.Slug" value="@item.Id" data-shipping-fee="">
                            <div>
                                <div>
                                    <p class="label-title">@item.Name</p>
                                    <p class="label-subtitle">@item.Description</p>
                                </div>
                                <div>
                                    <span id="@(item.Slug)-label" class="label-price">0 VND</span>
                                    <span class="checkmark"><i class="fa-solid fa-circle-check"></i></span>
                                </div>
                            </div>
                        </label>
                    }
                    <span asp-validation-for="@Model.ShippingMethod" style="color: var(--primary); margin-top: 10px; line-height: 20px; display: inline-block;"></span>
                </div>

            </div>
            <div class="checkout-info__item-container">
                <div class="checkout-info-header">
                    <i class="fa-solid fa-credit-card"></i>
                    <h6>Phương thức thanh toán</h6>
                </div>
                <div class="checkout-info-body">
                    @foreach (var item in Model.PaymentMethods) {
                        <label for="@item.Slug" class="payment-method radio-container @(item.Id == Model.PaymentMethod ? "checked" : "")">
                            <div>
                                <div>
                                    <p class="label-title">@item.Name</p>
                                    <p class="label-subtitle">@item.Description</p>
                                </div>
                                <div>
                                    <span class="checkmark"><i class="fa-solid fa-circle-check"></i></span>
                                </div>
                            </div>
                            <input type="radio" asp-for="@Model.PaymentMethod" id="@item.Slug" value="@item.Id">
                        </label>
                    }
                    <span asp-validation-for="@Model.PaymentMethod" style="color: var(--primary); margin-top: 10px; line-height: 20px; display: inline-block;"></span>
                </div>
            </div>
        </div>
        <div class="order-summary-wrapper">
            <div class="order-total__title">
                <i class="fa-solid fa-cube"></i>
                <h6>Order Summary</h6>
            </div>
            <div class="order-summary__list">
                @foreach (var item in Model.CartItems) {
                    <div class="product-row">
                        <img src="~/uploads/@item.ImageName" alt="">
                        <div>
                            <div>
                                <p>@item.ProductName</p>
                                <p>Size: @item.Size | Số lượng: @item.Quantity</p>
                                <p>@item.Price.ToString("#,##0 VND")</p>
                            </div>
                            <div>@item.SubTotal.ToString("#,##0 VND")</div>
                        </div>
                    </div>
                }
            </div>
            <div class="coupon-panel">
                <h5>Nhập mã giảm giá</h5>
                <div>
                    <div>
                        <input type="text" id="CouponInput" placeholder="Nhập mã khuyến mãi">
                        <button id="CouponSubmit" type="button">Áp dụng</button>
                    </div>
                    <div class="coupon-list" id="couponList">

                    </div>
                </div>
            </div>
            <div class="order-summary__total summary-panel">
                <ul>
                    <li>
                        <span>Đơn hàng</span>
                        <span>@Model.GrandTotal.ToString("#,##0 VND")</span>
                        <input type="text" asp-for="@Model.GrandTotal" />
                    </li>
                    <li>
                        <span>Giảm</span>
                        <span id="discount-display">0 VND</span>
                        <input type="text" name="DiscountAmount" value="0" />
                    </li>
                    <li>
                        <span>Phí vận chuyển</span>
                        <span id="shipping-fee-display">0 VND</span>
                        <input type="text" asp-for="@Model.ShippingFee" />
                    </li>
                </ul>
                <hr class="divider grey">
                <ul class="total">
                    <li>
                        <span>Tổng cộng</span>
                        <span id="order-total-display" class="primary-text-color">@Model.GrandTotal.ToString("#,##0 VND")</span>
                        <input type="text" name="OrderTotal" value="@Model.GrandTotal" />
                    </li>
                </ul>
                <button type="submit">Hoàn tất đặt hàng</button>
            </div>
        </div>
    </div>
}
